name: Deploy to Review Environment on Issue

on:
  issues:
    types: [opened]

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate Issue Format

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Validate Issue Body
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"

          # Validar nombre (debe tener al menos 2 caracteres)
          if [[ ! "$ISSUE_BODY" =~ "Nombre:" ]]; then
            echo "Error: El nombre no está presente en el cuerpo del issue."
            exit 1
          fi

          # Validar apellido (debe tener al menos 2 caracteres)
          if [[ ! "$ISSUE_BODY" =~ "Apellido:" ]]; then
            echo "Error: El apellido no está presente en el cuerpo del issue."
            exit 1
          fi

          # Validar fecha de nacimiento (formato YYYY-MM-DD)
          if [[ ! "$ISSUE_BODY" =~ "Fecha de nacimiento (YYYY-MM-DD):" ]]; then
            echo "Error: La fecha de nacimiento no está presente en el cuerpo del issue."
            exit 1
          fi

          echo "Formato del issue válido."

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Review Environment
    needs: validate 

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Extract Issue Data (for example, name, surname, birthdate)
        id: extract_data
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"
          echo "Extracting data from issue..."

          # Extraemos los datos relevantes del body del issue
          echo "name=$(echo $ISSUE_BODY | grep -oP 'Nombre: \K.*')" >> $GITHUB_ENV
          echo "surname=$(echo $ISSUE_BODY | grep -oP 'Apellido: \K.*')" >> $GITHUB_ENV
          echo "birthdate=$(echo $ISSUE_BODY | grep -oP 'Fecha de nacimiento (YYYY-MM-DD): \K.*')" >> $GITHUB_ENV

      - name: Deploy to Review Environment
        id: deploy
        run: |
          echo "Deploying to review environment..."
          
          # Crear un deployment en GitHub asociado al entorno de review.
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{
              "ref": "refs/heads/main",  # Esto puede ser una rama o el PR si es necesario.
              "task": "deploy",
              "environment": "review", 
              "auto_merge": false,
              "required_contexts": []
            }' \
            https://api.github.com/repos/${{ github.repository }}/deployments

      - name: Wait for approval
        run: |
          echo "Waiting for approval..."
          # GitHub pondrá automáticamente el deployment en estado de "Waiting for approval"
          # hasta que un revisor apruebe el despliegue manualmente.

      - name: Process Information
        run: |
          echo "Processing issue data..."
          echo "La persona ${{ env.name }} ${{ env.surname }} nacio el ${{ env.birthdate }}"

  close_issue:
    runs-on: ubuntu-latest
    name: Close the Issue
    needs: deploy
    if: success()

    steps:
      - name: Close Issue
        run: |
          echo "Cerrando el issue después de la aprobación del despliegue..."
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"state": "closed"}' \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}
